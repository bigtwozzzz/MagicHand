# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: skill.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import common_pb2 as common__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0bskill.proto\x12\x05skill\x1a\x0c\x63ommon.proto\"\x8c\x02\n\x0fSkillDefinition\x12\x10\n\x08skill_id\x18\x01 \x01(\t\x12\x12\n\nskill_name\x18\x02 \x01(\t\x12$\n\nskill_type\x18\x03 \x01(\x0e\x32\x10.skill.SkillType\x12\x13\n\x0b\x62\x61se_damage\x18\x04 \x01(\x05\x12\x11\n\tcast_time\x18\x05 \x01(\x02\x12\x11\n\tcool_down\x18\x06 \x01(\x02\x12\x10\n\x08\x64uration\x18\x07 \x01(\x02\x12\x11\n\tmana_cost\x18\x08 \x01(\x05\x12\"\n\x07\x65\x66\x66\x65\x63ts\x18\t \x03(\x0e\x32\x11.skill.EffectType\x12)\n\x0c\x65lement_type\x18\n \x01(\x0e\x32\x13.common.ElementType*l\n\tSkillType\x12\x10\n\x0c\x42\x41SIC_ATTACK\x10\x00\x12\x13\n\x0f\x45LEMENTAL_SPELL\x10\x01\x12\x12\n\x0e\x43ONTROL_EFFECT\x10\x02\x12\x0f\n\x0b\x42UFF_DEBUFF\x10\x03\x12\x13\n\x0fSPECIAL_ABILITY\x10\x04*l\n\nEffectType\x12\n\n\x06\x44\x41MAGE\x10\x00\x12\x08\n\x04HEAL\x10\x01\x12\x08\n\x04STUN\x10\x02\x12\x08\n\x04SLOW\x10\x03\x12\x0f\n\x0bSPEED_BOOST\x10\x04\x12\r\n\tINVISIBLE\x10\x05\x12\x14\n\x10\x45LEMENTAL_DAMAGE\x10\x06\x62\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'skill_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _SKILLTYPE._serialized_start=307
  _SKILLTYPE._serialized_end=415
  _EFFECTTYPE._serialized_start=417
  _EFFECTTYPE._serialized_end=525
  _SKILLDEFINITION._serialized_start=37
  _SKILLDEFINITION._serialized_end=305
# @@protoc_insertion_point(module_scope)
